use crate::constants::Float;

pub const D: usize = 3;

pub const Q: usize = 19;

pub const C: [[i32; D]; Q] = [
    [0, 0, 0],
    [1, 0, 0],
    [-1, 0, 0],
    [0, 1, 0],
    [0, -1, 0],
    [0, 0, 1],
    [0, 0, -1],
    [1, 1, 0],
    [-1, -1, 0],
    [1, 0, 1],
    [-1, 0, -1],
    [0, 1, 1],
    [0, -1, -1],
    [1, -1, 0],
    [-1, 1, 0],
    [1, 0, -1],
    [-1, 0, 1],
    [0, 1, -1],
    [0, -1, 1],
];

pub const W: [Float; Q] = [
    1.0 / 3.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 18.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
    1.0 / 36.0,
];

pub const Q_BAR: [usize; Q] = [
    0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17,
];

const Q_WEST: [usize; 5] = [2, 8, 10, 14, 16];

const Q_EAST: [usize; 5] = [1, 7, 9, 13, 15];

const Q_SOUTH: [usize; 5] = [4, 8, 12, 13, 18];

const Q_NORTH: [usize; 5] = [3, 7, 11, 14, 17];

const Q_BOTTOM: [usize; 5] = [6, 10, 12, 15, 17];

const Q_TOP: [usize; 5] = [5, 9, 11, 16, 18];

pub const Q_FACES: [[usize; 5]; 6] = [Q_WEST, Q_EAST, Q_SOUTH, Q_NORTH, Q_BOTTOM, Q_TOP];

pub const MRT_MATRIX: [[Float; Q]; Q] = [
    [
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0,
    ],
    [
        -30.0, -11.0, -11.0, -11.0, -11.0, -11.0, -11.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0,
        8.0, 8.0, 8.0, 8.0,
    ],
    [
        12.0, -4.0, -4.0, -4.0, -4.0, -4.0, -4.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0,
    ],
    [
        0.0, 1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 1.0, -1.0,
        0.0, 0.0,
    ],
    [
        0.0, -4.0, 4.0, 0.0, 0.0, 0.0, 0.0, 1.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 1.0, -1.0,
        0.0, 0.0,
    ],
    [
        0.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, -1.0, 1.0, 0.0, 0.0,
        1.0, -1.0,
    ],
    [
        0.0, 0.0, 0.0, -4.0, 4.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, -1.0, 1.0, 0.0, 0.0,
        1.0, -1.0,
    ],
    [
        0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0,
        -1.0, 1.0,
    ],
    [
        0.0, 0.0, 0.0, 0.0, 0.0, -4.0, 4.0, 0.0, 0.0, 1.0, -1.0, 1.0, -1.0, 0.0, 0.0, -1.0, 1.0,
        -1.0, 1.0,
    ],
    [
        0.0, 2.0, 2.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -2.0, -2.0, 1.0, 1.0, 1.0, 1.0,
        -2.0, -2.0,
    ],
    [
        0.0, -4.0, -4.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, -2.0, -2.0, 1.0, 1.0, 1.0, 1.0,
        -2.0, -2.0,
    ],
    [
        0.0, 0.0, 0.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, -1.0, -1.0,
        0.0, 0.0,
    ],
    [
        0.0, 0.0, 0.0, -2.0, -2.0, 2.0, 2.0, 1.0, 1.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, -1.0, -1.0,
        0.0, 0.0,
    ],
    [
        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0,
        0.0,
    ],
    [
        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0,
        -1.0,
    ],
    [
        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0,
        0.0,
    ],
    [
        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 1.0, -1.0, -1.0, 1.0,
        0.0, 0.0,
    ],
    [
        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 1.0, -1.0, 0.0, 0.0,
        1.0, -1.0,
    ],
    [
        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, -1.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0,
        1.0, -1.0,
    ],
];

pub const MRT_INVERSE_MATRIX: [[Float; Q]; Q] = [
    [
        1.0 / 19.0,
        -5.0 / 399.0,
        1.0 / 21.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    [
        1.0 / 19.0,
        -11.0 / 2394.0,
        -1.0 / 63.0,
        0.1,
        -0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0 / 18.0,
        -1.0 / 18.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    [
        1.0 / 19.0,
        -11.0 / 2394.0,
        -1.0 / 63.0,
        -0.1,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0 / 18.0,
        -1.0 / 18.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    [
        1.0 / 19.0,
        -11.0 / 2394.0,
        -1.0 / 63.0,
        0.0,
        0.0,
        0.1,
        -0.1,
        0.0,
        0.0,
        -1.0 / 36.0,
        1.0 / 36.0,
        1.0 / 12.0,
        -1.0 / 12.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    [
        1.0 / 19.0,
        -11.0 / 2394.0,
        -1.0 / 63.0,
        0.0,
        0.0,
        -0.1,
        0.1,
        0.0,
        0.0,
        -1.0 / 36.0,
        1.0 / 36.0,
        1.0 / 12.0,
        -1.0 / 12.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    [
        1.0 / 19.0,
        -11.0 / 2394.0,
        -1.0 / 63.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        -0.1,
        -1.0 / 36.0,
        1.0 / 36.0,
        -1.0 / 12.0,
        1.0 / 12.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    [
        1.0 / 19.0,
        -11.0 / 2394.0,
        -1.0 / 63.0,
        0.0,
        0.0,
        0.0,
        0.0,
        -0.1,
        0.1,
        -1.0 / 36.0,
        1.0 / 36.0,
        -1.0 / 12.0,
        1.0 / 12.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        0.1,
        0.025,
        0.1,
        0.025,
        0.0,
        0.0,
        1.0 / 36.0,
        1.0 / 72.0,
        1.0 / 12.0,
        1.0 / 24.0,
        0.25,
        0.0,
        0.0,
        0.125,
        -0.125,
        0.0,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        -0.1,
        -0.025,
        -0.1,
        -0.025,
        0.0,
        0.0,
        1.0 / 36.0,
        1.0 / 72.0,
        1.0 / 12.0,
        1.0 / 24.0,
        0.25,
        0.0,
        0.0,
        -0.125,
        0.125,
        0.0,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        0.1,
        0.025,
        0.0,
        0.0,
        0.1,
        0.025,
        1.0 / 36.0,
        1.0 / 72.0,
        -1.0 / 12.0,
        -1.0 / 24.0,
        0.0,
        0.0,
        0.25,
        -0.125,
        0.0,
        0.125,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        -0.1,
        -0.025,
        0.0,
        0.0,
        -0.1,
        -0.025,
        1.0 / 36.0,
        1.0 / 72.0,
        -1.0 / 12.0,
        -1.0 / 24.0,
        0.0,
        0.0,
        0.25,
        0.125,
        0.0,
        -0.125,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        0.0,
        0.0,
        0.1,
        0.025,
        0.1,
        0.025,
        -1.0 / 18.0,
        -1.0 / 36.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.0,
        0.0,
        0.125,
        -0.125,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        0.0,
        0.0,
        -0.1,
        -0.025,
        -0.1,
        -0.025,
        -1.0 / 18.0,
        -1.0 / 36.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.0,
        0.0,
        -0.125,
        0.125,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        0.1,
        0.025,
        -0.1,
        -0.025,
        0.0,
        0.0,
        1.0 / 36.0,
        1.0 / 72.0,
        1.0 / 12.0,
        1.0 / 24.0,
        -0.25,
        0.0,
        0.0,
        0.125,
        0.125,
        0.0,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        -0.1,
        -0.025,
        0.1,
        0.025,
        0.0,
        0.0,
        1.0 / 36.0,
        1.0 / 72.0,
        1.0 / 12.0,
        1.0 / 24.0,
        -0.25,
        0.0,
        0.0,
        -0.125,
        -0.125,
        0.0,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        0.1,
        0.025,
        0.0,
        0.0,
        -0.1,
        -0.025,
        1.0 / 36.0,
        1.0 / 72.0,
        -1.0 / 12.0,
        -1.0 / 24.0,
        0.0,
        0.0,
        -0.25,
        -0.125,
        0.0,
        -0.125,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        -0.1,
        -0.025,
        0.0,
        0.0,
        0.1,
        0.025,
        1.0 / 36.0,
        1.0 / 72.0,
        -1.0 / 12.0,
        -1.0 / 24.0,
        0.0,
        0.0,
        -0.25,
        0.125,
        0.0,
        0.125,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        0.0,
        0.0,
        0.1,
        0.025,
        -0.1,
        -0.025,
        -1.0 / 18.0,
        -1.0 / 36.0,
        0.0,
        0.0,
        0.0,
        -0.25,
        0.0,
        0.0,
        0.125,
        0.125,
    ],
    [
        1.0 / 19.0,
        4.0 / 1197.0,
        1.0 / 252.0,
        0.0,
        0.0,
        -0.1,
        -0.025,
        0.1,
        0.025,
        -1.0 / 18.0,
        -1.0 / 36.0,
        0.0,
        0.0,
        0.0,
        -0.25,
        0.0,
        0.0,
        -0.125,
        -0.125,
    ],
];

pub fn mrt_equilibrium_moments_computation(density: Float, velocity: Vec<Float>) -> Vec<Float> {
    vec![
        density,
        -11.0 * density
            + 19.0
                * density
                * (velocity[0] * velocity[0]
                    + velocity[1] * velocity[1]
                    + velocity[2] * velocity[2]),
        3.0 * density
            - 5.5
                * density
                * (velocity[0] * velocity[0]
                    + velocity[1] * velocity[1]
                    + velocity[2] * velocity[2]),
        density * velocity[0],
        -2.0 / 3.0 * density * velocity[0],
        density * velocity[1],
        -2.0 / 3.0 * density * velocity[1],
        density * velocity[2],
        -2.0 / 3.0 * density * velocity[2],
        2.0 * density * velocity[0] * velocity[0]
            - density * (velocity[1] * velocity[1] + velocity[2] + velocity[2]),
        -0.5 * (2.0 * density * velocity[0] * velocity[0]
            - density * (velocity[1] * velocity[1] + velocity[2] + velocity[2])),
        density * (velocity[1] * velocity[1] - velocity[2] * velocity[2]),
        -0.5 * density * (velocity[1] * velocity[1] - velocity[2] * velocity[2]),
        density * velocity[0] * velocity[1],
        density * velocity[1] * velocity[2],
        density * velocity[0] * velocity[2],
        0.0,
        0.0,
        0.0,
    ]
}
